" initial {{{ 

scriptencoding utf-8
set encoding=utf-8
set nocompatible
set t_Co=256

"}}}

" Vundle / Plugin manager {{{

let g:downloaded_vundle = 0
if !isdirectory($HOME . "/.vim/bundle")
	echo "Downloading Vundle!"
	echo "Please Wait..."
	call system("git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim")
	let g:downloaded_vundle = 1
endif

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

	Plugin 'VundleVim/Vundle.vim'

	Plugin 'christoomey/vim-tmux-navigator' "  Tmux & vim integration, somehow
	Plugin 'godlygeek/tabular'              "  Aligning of text
	Plugin 'scrooloose/nerdtree'            "  filetree
	Plugin 'Xuyuanp/nerdtree-git-plugin'    "  git plugin for ^
	"Plugin 'tpope/vim-surround'            "
	"Plugin 'tpope/vim-dispatch'
	Plugin 'scrooloose/syntastic'           "  error checking
	Plugin 'airblade/vim-gitgutter'         "  git diff sign
	Plugin 'HugoNikanor/vim-breakpoint'     "  gdb breakpoint sign
	Plugin 'majutsushi/tagbar'
	Plugin 'Shougo/unite.vim'

	" Requires that fzf is installed on the system
	Plugin 'junegunn/fzf.vim'

	"Plugin 'lervag/vimtex'                  "  latex thingys

call vundle#end()
filetype plugin indent on

if g:downloaded_vundle
	:PluginInstall
	echo "You might want to restart Vim for all settings to take effect"
endif

"}}}

" Higlighting {{{

syntax on
colorscheme comments

call matchadd('ColorColumn', '\%81v', 100) " Color marking when passing line 80
syntax match Error "\s\+$" " Trailing whitespace

if $TERM ==? "linux"
	exec "set listchars=tab:>-,eol:$,nbsp:_,trail:~"
" This should be changed to match anything containing xterm
elseif ($TERM ==? "xterm") + ($TERM ==? "xterm-termite")
	exec "set listchars=tab:>â€”,eol:\u00b6,nbsp:\u2423,trail:~"
elseif expand($TMUX) != ''
	exec "set listchars=tab:>-,eol:\u00b6,nbsp:\u2423,trail:~"
else " who knows what this is
	colorscheme delek
endif
" There should also be a clause for anything containing 'screen'

"}}}

" Other {{{

" cmap expands at type time, cnoreabbrev at run time
cnoreabbrev ntt NERDTreeToggle
cnoreabbrev w!! w !sudo tee % > /dev/null
cmap vh vertical help
com! FormatJSON %!python -m json.tool

let mapleader=" "

nnoremap <silent> <leader>o :nohlsearch<cr>
nnoremap <leader>s :%s/\s\+$//<cr>
nnoremap <leader>d 0D
nnoremap <silent> <leader>a :set foldlevel=0<cr>
nnoremap <leader>f :NERDTreeToggle<cr>
nnoremap <silent> <leader>j :cn<cr>
nnoremap <silent> <leader>k :cp<cr>

nnoremap <cr> o<esc>
nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k
nnoremap Y y$

set tabstop=4
set shiftwidth=4
set softtabstop=4

set foldenable

set foldmethod=marker
set foldnestmax=20
set foldlevelstart=0
set foldlevel=0

set smartindent
set mouse=a
set number
set breakindent       " makes wrapped lines have the same indention as the original line
set visualbell t_vb=  " disable terminal flashing on error
set laststatus=2      " Display filename on the next to last line
set ruler             " Show cursor possition in info bar
set showcmd           " Show button presses in lower right portion of the screen
set ignorecase        " Ignore case while searching
set smartcase         " but keep if capitals are present
set wildmenu          " Tab shows options
set splitbelow
set splitright
set incsearch         " interactive search
set hlsearch          " highlight all
set virtualedit=block " like all but only for visual block
set completeopt=longest,menuone " <C-n> don't autoselect
set path+=**

"}}}
