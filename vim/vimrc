" initial {{{

scriptencoding utf-8
set encoding=utf-8
"set nocompatible
"set t_Co=256

"}}}

" Plugin manager {{{

let g:downloaded_plug = 0
if findfile ("plug.vim", expand("~/.vim/autoload")) == ""
	echo "Downloading Plug!"
	echo "Please Wait..."
	call system("curl -fLo ~/.vim/autoload/plug.vim --create-dirs " .
	          \ "https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim")
	let g:downloaded_plug = 1
endif

call plug#begin("~/.vim/plugged")
	Plug 'junegunn/vim-plug'              " For Documentation
	Plug 'christoomey/vim-tmux-navigator' " Tmux & vim integration, somehow
	Plug 'godlygeek/tabular'              " Aligning of text
	Plug 'scrooloose/nerdtree'            " filetree
	Plug 'Xuyuanp/nerdtree-git-plugin'    " git plugin for ^
	Plug 'scrooloose/syntastic'           " Compiler error handler
	Plug 'airblade/vim-gitgutter'         " git diff sign
	Plug 'majutsushi/tagbar'              " Side buffer containing tag list
	" Plug 'Shougo/unite.vim'
	Plug 'vim-scripts/bnf.vim'            " Backus Naur Form highlighting
	Plug 'drmikehenry/vim-headerguard'    " Auto place C header guards
	Plug 'tpope/vim-speeddating'          " Make C-[ax] work with dates

	" gdb breakpoint sign
	if version >= 800 |Plug 'HugoNikanor/vim-breakpoint'
	else              |Plug 'HugoNikanor/vim-breakpoint', {'tag': 'v7'}
	endif
	" Requires that fzf is installed on the system
	"
	" Assumes $VIM is /usr/share/vim/. Path is pacman path for
	" vim pluggins. Other package managers might differ
	if empty(findfile($VIM . "/vimfiles/plugin/fzf.vim"))
		Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
	endif
	Plug 'junegunn/fzf.vim'

call plug#end()

if g:downloaded_plug
	" TODO running this from vimrc causes the terminal
	" to be placed in underline mode. Fix this and reenable
	" this here.
	"PlugInstall
	echo "Run `:PlugInstall` to actually download pluggins"
endif

"}}}

" Higlighting {{{

syntax on
colorscheme comments

" Color marking when passing line 80
call matchadd('ColorColumn', '\%81v', 100)
syntax match Error "\s\+$" " Trailing whitespace

if $TERM ==? "linux"
	exec "set listchars=tab:>-,eol:$,nbsp:_,trail:~"
elseif $TERM =~ "xterm"
	exec "set listchars=tab:>â€”,eol:\u00b6,nbsp:\u2423,trail:~"
elseif $TERM =~ "screen"
	" Both Screen and Tmux terminals are here
	exec "set listchars=tab:>-,eol:\u00b6,nbsp:\u2423,trail:~"
else
	" Other terminal types, set safe fallback
	colorscheme delek
endif

"}}}

" Other {{{

" cmap expands at type time, cnoreabbrev at run time
cnoreabbrev ntt NERDTreeToggle
cnoreabbrev w!! w !sudo tee % > /dev/null
cmap vh vertical help
com! FormatJSON %!python -m json.tool

let mapleader=" "

nnoremap <silent> <leader>o :nohlsearch<cr>
nnoremap <leader>s :%s/\s\+$//<cr>
nnoremap <leader>d 0D
nnoremap <silent> <leader>a :set foldlevel=0<cr>
"nnoremap <leader>f :NERDTreeToggle<cr>
nnoremap <leader>f :Files<cr>
nnoremap <silent> <leader>j :cn<cr>
nnoremap <silent> <leader>k :cp<cr>

" Possibly figure out how to type <C-]> in TTY
nnoremap <leader>c <C-]>
" TODO This works, but it doesn't update the screen right away 
nnoremap <leader>h :call header#change()<cr>

nnoremap <cr> o<esc>
nnoremap Y y$

nnoremap <C-p> :Files<cr>
nnoremap <C-n> :Tags<cr>

set tabstop=4
set shiftwidth=4
set softtabstop=4

set foldenable
set foldmethod=marker
set foldnestmax=20
set foldlevelstart=0
set foldlevel=0

set smartindent
set mouse=a
set number
set breakindent       " makes wrapped lines have the same indention as the original line
set visualbell t_vb=  " disable terminal flashing on error
set laststatus=2      " Display filename on the next to last line
set ruler             " Show cursor possition in info bar
set showcmd           " Show button presses in lower right portion of the screen
set ignorecase        " Ignore case while searching
set smartcase         " but keep if capitals are present
set wildmenu          " Tab shows options
set splitbelow
set splitright
set incsearch         " interactive search
set hlsearch          " highlight all
set virtualedit=block " like all but only for visual block
set completeopt=longest,menuone " <C-n> don't autoselect
set path+=**

set wildignore+=tags
set tags+=tags;/

"}}}
