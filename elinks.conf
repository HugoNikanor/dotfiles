## ELinks 0.13.GIT configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about obsolete
  #  config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will be
  #  extracted from the environment dynamically.
  set ui.language = "System"





##################################
# Automatically saved keybindings
#

bind "main" "j" = "scroll-down"
bind "main" "h" = "scroll-left"
bind "main" "l" = "scroll-right"
bind "main" "k" = "scroll-up"



##############################
# Automatically saved options
#

## cookies 
#  Cookies options.

  ## cookies.accept_policy <num>
  #  Cookies accepting policy:
  #  0 is accept no cookies
  #  1 is ask for confirmation before accepting cookie
  #  2 is accept all cookies
  set cookies.accept_policy = 2


## terminal 
#  Terminal options.

  ## terminal.xterm-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-256color.charset <codepage>
    set terminal.xterm-256color.charset = "utf-8"





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

  ## terminal.xterm-256color 
  #  Options specific to this terminal type (according to $TERM value).

    ## terminal.xterm-256color.type <num>
    set terminal.xterm-256color.type = 2





##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

    ## config.indentation <num>
    #  Shift width of one indentation level in the configuration file. Zero
    #  means that no indentation is performed at all when saving the
    #  configuration.
    set config.indentation = 4


## document 
#  Document options.

    ## document.html 
    #  Options concerning the display of HTML pages.

        ## document.html.underline_links [0|1]
        #  Underline links.
        set document.html.underline_links = 1






##############################
# Automatically saved options
#

## ui 
#  User interface options.

    ## ui.success_msgbox [0|1]
    #  When you pressed a [ Save ] button in some manager, this option will make
    #  sure that a box confirming success of the operation will pop up.
    set ui.success_msgbox = 0





##################################
# Automatically saved keybindings
#

bind "main" "K" = "move-link-prev"
bind "main" "J" = "move-link-next"
bind "main" "`" = "mark-set"
bind "main" "\'" = "none"



##################################
# Automatically saved keybindings
#

bind "main" "m" = "mark-goto"



##################################
# Automatically saved keybindings
#

bind "main" "X" = "tab-close-all-but-current"
bind "main" "x" = "none"
bind "main" "Space" = "move-half-page-down"
bind "main" "Ctrl-Right" = "none"
bind "main" "Right" = "history-move-forward"



##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

    ## terminal.screen-256color 
    #  Options specific to this terminal type (according to $TERM value).

        ## terminal.screen-256color.underline [0|1]
        set terminal.screen-256color.underline = 1
        ## terminal.screen-256color.italic [0|1]
        set terminal.screen-256color.italic = 0
        ## terminal.screen-256color.colors <num>
        set terminal.screen-256color.colors = 1
        ## terminal.screen-256color.block_cursor [0|1]
        set terminal.screen-256color.block_cursor = 1
        ## terminal.screen-256color.utf_8_io [0|1]
        set terminal.screen-256color.utf_8_io = 1
        ## terminal.screen-256color.type <num>
        set terminal.screen-256color.type = 5





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

    ## terminal.xterm-256color 
    #  Options specific to this terminal type (according to $TERM value).

        ## terminal.xterm-256color.italic [0|1]
        set terminal.xterm-256color.italic = 1
        ## terminal.xterm-256color.utf_8_io [0|1]
        set terminal.xterm-256color.utf_8_io = 1





##############################
# Automatically saved options
#

## protocol 
#  Protocol specific options.

    ## protocol.rewrite 
    #  Rules for rewriting URIs entered in the goto dialog. It makes it possible
    #  to define a set of prefixes that will be expanded if they match a string
    #  entered in the goto dialog. The prefixes can be dumb, meaning that they
    #  work only like URI abbreviations, or smart ones, making it possible to
    #  pass arguments to them like search engine keywords.

        ## protocol.rewrite.smart 
        #  Smart prefixes, see enable-smart description for details.

            ## protocol.rewrite.smart.arch <str>
            #  Replacement URI for this smartprefix:
            #  %c in the string means the current URL
            #  %s in the string means the whole argument to smartprefix
            #  %0,%1,...,%9 means argument 0, 1, ..., 9
            #  %% in the string means '%'
            set protocol.rewrite.smart.arch = "https://wiki.archlinux.org/index.php?title=Special%%3ASearch&search=%s&go=Go"







##################################
# Automatically saved keybindings
#

bind "main" "H" = "history-manager"
